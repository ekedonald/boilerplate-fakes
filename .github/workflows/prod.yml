name: Build, Test and Deploy for Production

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.1"
      - name: Build the application
        run: go build -o learnai_prod
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: learnai_prod_app_env_artifacts
          path: learnai_prod
      
  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      TEST_DB_HOST: localhost
      TEST_DB_PORT: 5432
      TEST_DB_CONNECTION: pgsql
      TEST_TIMEZONE: Africa/Lagos
      TEST_SSLMODE: disable
      TEST_USERNAME: postgres
      TEST_PASSWORD: password
      TEST_DB_NAME: db_name
      TEST_MIGRATE: true
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.TEST_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.TEST_PASSWORD }}
          POSTGRES_DB: ${{ env.TEST_DB_NAME }}
        ports:
          - 5432:5432
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run All Tests
        run: go test ./... -timeout 99999s
      # - name: Create the app config file
      #   run: cp app-sample.env app.env
      # - name: Run The Project
      #   run: nohup go run main.go > /dev/null 2>&1 &
      # - name: Wait for application to start
      #   run: sleep 30s
      # - name: Test for reachability
      #   run: curl http://localhost:8019
      

  # shadows:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   env:
  #     POSTGRES_USER: ${{ secrets.USERNAME }}
  #     POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
  #     POSTGRES_DB: ${{ secrets.DB_NAME }}
  #   services:
  #     postgres:
  #       image: postgres:latest
  #       env:
  #         POSTGRES_USER: ${{ env.POSTGRES_USER }}
  #         POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
  #         POSTGRES_DB: ${{ env.POSTGRES_DB }}
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #     - name: Download learnai_prod artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: learnai_prod_app_env_artifacts
  #     - name: list files
  #       run: ls -l
    
  #     - name: Create the app config file
  #       run: cp app-sample.env app.env
  #     - name: Run The Project
  #       run: nohup go run main.go > /dev/null 2>&1 &
  #     - name: Wait for application to start
  #       run: sleep 30s
  #     - name: Test for reachability
  #       run: curl http://localhost:8019

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   env:
  #     USERNAME: ${{ secrets.SSH_USERNAME }}
  #     HOST: ${{ secrets.HOST }}
  #     PORT: ${{ secrets.PORT }}
  #     KEY: ${{ secrets.KEY }}
  #     PROCESS_NAME: run_learnai_prod

  #   steps:
  #     - name: Download learnai_prod artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: learnai_prod
  #     - name: Make binary executable
  #       run: chmod +x learnai_prod

  #     - name: Copy learnai_prod to server
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ env.HOST }}
  #         username: ${{ env.USERNAME }}
  #         key: ${{ env.KEY }}
  #         port: ${{ env.PORT }}
  #         source: "learnai_prod"
  #         target: "/home/${{ env.USERNAME }}/boilerplate-fakes/"

  #     - name: SSH into server and deploy
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ env.HOST }}
  #         username: ${{ env.USERNAME }}
  #         key: ${{ env.KEY}}
  #         port: ${{ env.PORT }}
  #         script: |
  #           git clone https://github.com/ekedonald/boilerplate-fakes.git
  #           cd boilerplate-fakes
  #           sudo chmod +x old_main.sh
  #           sudo ./old_main.sh
  #           cp app-sample.env app.env
  #           nohup go run main.go > /dev/null 2>&1 &
  #           sleep 30s
  #           curl http://localhost:8019