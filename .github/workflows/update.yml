name: Build, Test, and Deploy for Production

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.1"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build_arts
      - name: Build the application
        run: go build -o learnai_prod

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db_name
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Create the app config file
        run: cp app-sample.env app.env
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
      - name: List Contents
        run: ls -l
      - name: Run The Project
        run: nohup go run main.go > /dev/null 2>&1 &
      - name: Wait for application to start
        run: sleep 30s
      - name: Test for reachability
        run: curl http://localhost:8019
      - name: Run All Tests
        run: go test ./... -timeout 99999s

    

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   env:
  #     USERNAME: ${{ secrets.USERNAME }}
  #     HOST: ${{ secrets.HOST }}
  #     PORT: ${{ secrets.PORT }}
  #     KEY: ${{ secrets.KEY }}
  #     PROCESS_NAME: run_learnai_prod

  #   steps:
  #     - name: SSH into server and deploy
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ env.HOST }}
  #         username: ${{ env.USERNAME }}
  #         key: ${{ env.KEY}}
  #         port: ${{ env.PORT }}
  #         script: |
  #           git clone https://github.com/ekedonald/boilerplate-fakes.git
  #           cd boilerplate-fakes
  #           sudo chmod +x old_main.sh
  #           sudo ./old_main.sh
  #           cp app-sample.env app.env
  #           nohup go run main.go > /dev/null 2>&1 &
  #           sleep 30s
  #           curl http://localhost:8019